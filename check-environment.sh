#!/bin/bash

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Å–±–æ—Ä–∫–µ Android –ø—Ä–æ–µ–∫—Ç–∞
# Check Android development environment

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Android —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–π —Å—Ä–µ–¥—ã"
echo "====================================="

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

function print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

function print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

function print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

function print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Java
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Java..."
if command -v java &> /dev/null; then
    JAVA_VERSION=$(java -version 2>&1 | head -n1 | cut -d'"' -f2)
    print_success "Java —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: $JAVA_VERSION"
else
    print_error "Java –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OpenJDK 17 –∏–ª–∏ –Ω–æ–≤–µ–µ"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Android Studio
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Android Studio..."
if [ -d "/opt/android-studio" ] || [ -d "$HOME/android-studio" ] || command -v studio &> /dev/null; then
    print_success "Android Studio –Ω–∞–π–¥–µ–Ω–∞"
else
    print_warning "Android Studio –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø—É—Ç—è—Ö"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ANDROID_HOME
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ ANDROID_HOME..."
if [ -n "$ANDROID_HOME" ] && [ -d "$ANDROID_HOME" ]; then
    print_success "ANDROID_HOME —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: $ANDROID_HOME"
elif [ -d "$HOME/Android/Sdk" ]; then
    export ANDROID_HOME="$HOME/Android/Sdk"
    print_success "ANDROID_HOME –Ω–∞–π–¥–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: $ANDROID_HOME"
else
    print_error "ANDROID_HOME –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SDK"
    print_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ Android Studio: Tools -> SDK Manager"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SDK components
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Android SDK..."
if [ -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
    PLATFORMS=$(ls "$ANDROID_HOME/platforms" 2>/dev/null | grep "android-" | wc -l)
    BUILD_TOOLS=$(ls "$ANDROID_HOME/build-tools" 2>/dev/null | wc -l)
    
    print_success "–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã: $PLATFORMS"
    print_success "Build Tools: $BUILD_TOOLS"
else
    print_warning "Command line tools –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
PROJECT_DIR="/home/freya/DockerProjects/NextcloudAIO/NextFork/next-talk-android"

if [ -f "$PROJECT_DIR/build.gradle" ]; then
    print_success "–ì–ª–∞–≤–Ω—ã–π build.gradle –Ω–∞–π–¥–µ–Ω"
else
    print_error "–ì–ª–∞–≤–Ω—ã–π build.gradle –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

if [ -f "$PROJECT_DIR/app/build.gradle" ]; then
    print_success "App build.gradle –Ω–∞–π–¥–µ–Ω"
else
    print_error "App build.gradle –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

if [ -f "$PROJECT_DIR/gradlew" ]; then
    print_success "Gradle wrapper –Ω–∞–π–¥–µ–Ω"
    chmod +x "$PROJECT_DIR/gradlew"
else
    print_error "Gradle wrapper –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π gradlew
if [ -x "$PROJECT_DIR/gradlew" ]; then
    print_success "Gradle wrapper executable"
else
    print_warning "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –Ω–∞ gradlew..."
    chmod +x "$PROJECT_DIR/gradlew"
fi

echo ""
print_success "–°—Ä–µ–¥–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!"
print_info "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "  1. –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ Android Studio: File -> Open -> –≤—ã–±—Ä–∞—Ç—å $PROJECT_DIR"
echo "  2. –î–æ–∂–¥–∞—Ç—å—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Gradle"
echo "  3. –í—ã–±—Ä–∞—Ç—å flavor 'gplay' –¥–ª—è —Å–±–æ—Ä–∫–∏ —Å push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏"
echo "  4. –°–æ–±—Ä–∞—Ç—å APK: Build -> Build Bundle(s) / APK(s) -> Build APK(s)"
echo ""
print_info "–ò–ª–∏ —Å–æ–±—Ä–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É:"
echo "  cd $PROJECT_DIR"
echo "  ./gradlew assembleGplayDebug"
